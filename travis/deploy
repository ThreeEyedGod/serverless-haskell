#!/usr/bin/env ruby
# Script for deploying the package via Travis CI
# Use --dry-run for testing without uploading anything

require 'fileutils'
require 'json'

dry_run = ARGV[0] == '--dry-run'

stack_credentials = File.expand_path('~/.stack/upload/credentials.json')
unless File.exists?(stack_credentials)
  FileUtils.mkdir_p(File.dirname(stack_credentials))

  File.open(stack_credentials, 'w') { |f|
    config = {
      :username => ENV['HACKAGE_USERNAME'],
      :password => ENV['HACKAGE_PASSWORD'],
    }
    f.write(config.to_json)
  }
end

# Release to Hackage via Stack

if dry_run
  hackage_uploaded = system('stack', 'sdist')
else
  hackage_uploaded = system('stack', 'upload', '.')
end
if not hackage_uploaded
  print "Failed to upload to Hackage.\n"
  exit(1)
end

# Publish Haddock
# Adapted from https://github.com/phaazon/stack-haddock-upload

package = 'serverless-haskell'
version = `stack ls dependencies | grep '#{package} '`.split()[1]

root_path = Dir.pwd

system('stack', 'haddock')

dist = `stack path --dist-dir`.strip()
docdir = dist + '/doc/html'
Dir.chdir(docdir)
doc = "#{package}-#{version}-docs"
system('cp', '-r', package, doc)
system('tar', '-c', '-v', '-z', '--format=ustar', '-f', "#{doc}.tar.gz", doc)
print("Generated documentation in #{docdir}/#{doc}.tar.gz\n\n")
unless dry_run
  system('curl', '-X', 'PUT',
         '-H', 'Content-Type: application/x-tar',
         '-H', 'Content-Encoding: gzip',
         '--data-binary', "@#{doc}.tar.gz",
         "https://#{ENV['HACKAGE_USERNAME']}:#{ENV['HACKAGE_PASSWORD']}@hackage.haskell.org/package/#{package}-#{version}/docs")
end

Dir.chdir(root_path)

# Release to NPM

npmrc = File.expand_path('~/.npmrc')
unless File.exists?(npmrc)
  File.open(npmrc, 'w') { |f|
    f.write("//registry.npmjs.org/:_authToken=#{ENV['NPM_TOKEN']}\n")
  }
  FileUtils.chmod 0600, npmrc
end

Dir.chdir('serverless-plugin')
system('npm', 'install')
dry_run_arg = if dry_run then ['--dry-run'] else [] end
npm_uploaded = system('npm', 'publish', *dry_run_arg)
if not npm_uploaded
  print "Failed to upload to NPM.\n"
  exit(1)
end
